{"ast":null,"code":"import _slicedToArray from \"/Users/krystaljoysilvestre/Documents/tal/flexible-grid/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/krystaljoysilvestre/Documents/tal/flexible-grid/src/App.js\";\nimport React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport { GlobalStyle } from './theme';\nimport { Banner } from './components/Banner';\nimport * as A from './style';\n\nfunction App() {\n  const _useState = useState('dark'),\n        _useState2 = _slicedToArray(_useState, 2),\n        theme = _useState2[0],\n        selectTheme = _useState2[1];\n\n  const ThemeContext = React.createContext(theme);\n  return React.createElement(ThemeContext.Provider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Banner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/krystaljoysilvestre/Documents/tal/flexible-grid/src/App.js"],"names":["React","useState","Container","GlobalStyle","Banner","A","App","theme","selectTheme","ThemeContext","createContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACgBL,QAAQ,CAAC,MAAD,CADxB;AAAA;AAAA,QACNM,KADM;AAAA,QACCC,WADD;;AAGb,QAAMC,YAAY,GAAGT,KAAK,CAACU,aAAN,CAAoBH,KAApB,CAArB;AAEA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAyKD;;AACD,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Container } from 'reactstrap';\n\nimport { GlobalStyle } from './theme';\nimport { Banner } from './components/Banner';\n\nimport * as A from './style';\n\nfunction App() {\n  const [theme, selectTheme] = useState('dark');\n\n  const ThemeContext = React.createContext(theme);\n\n  return (\n    <ThemeContext.Provider>\n      <GlobalStyle theme={theme} />\n        <Banner />\n\n        <Container>\n          {/* <A.Panel>\n            <ButtonGroup>\n              <A.Button\n                {...theme}\n                active={theme === 'light'}\n                onClick={() => selectTheme('light')}\n              >\n                Light\n              </A.Button>\n              <A.Button\n                {...theme}\n                active={theme === 'dark'}\n                onClick={() => selectTheme('dark')}\n              >\n                Dark\n              </A.Button>\n            </ButtonGroup>\n          </A.Panel> */}\n\n          {/* <A.Panel>\n            <h3>Reusable Component</h3>\n\n            <A.CodePanel theme={theme}>\n              <code>\n                {`import { GridParent, GridChild } from './path/to/Grid';`}\n              </code>\n              <br />\n              <br />\n              <code>{`function Grid() {`}</code>\n              <br />\n              <code>&nbsp;&nbsp;{`return (`}</code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                {`<GridParent id=\"container\" direction=\"column\">`}\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {`<GridChild id=\"first-child\" direction=\"column\" grow=\"2\" order=\"3\">`}\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <i>{`// another grid here`}</i>\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {`</GridChild>`}\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {`<GridChild id=\"second-child\" order=\"1\">`}\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <i>{`// element goes here`}</i>\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {`</GridChild>`}\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {`<GridChild id=\"third-child\" order=\"2\">`}\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <i>{`// element goes here`}</i>\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                {`</GridChild>`}\n              </code>\n              <br />\n              <code>&nbsp;&nbsp;&nbsp;&nbsp;{`</GridParent>`}</code>\n              <br />\n              <code>&nbsp;&nbsp;{`);`}</code>\n              <br />\n              <code>{`}`}</code>\n              <br />\n              <code>{`export default Grid;`}</code>\n            </A.CodePanel>\n\n            <h4>Properties</h4>\n            <A.CodePanel theme={theme}>\n              <code>{`GridParent.propTypes = {`}</code>\n              <br />\n              <code>&nbsp;&nbsp;{`id: PropTypes.string,`}</code>\n              <br />\n              <code>\n                &nbsp;&nbsp;{`direction: PropTypes.string,`}\n                <i>\n                  &nbsp;&nbsp;\n                  {`// orientation of child elements; row|row-reverse|column|column-reverse|initial|inherit`}\n                </i>\n              </code>\n              <br />\n              <code>&nbsp;&nbsp;{`items: PropTypes.array`}</code>\n              <br />\n              <code>{`};`}</code>\n              <br />\n              <br />\n              <code>{`GridChild.propTypes = {`}</code>\n              <br />\n              <code>&nbsp;&nbsp;{`id: PropTypes.string,`}</code>\n              <br />\n              <code>\n                &nbsp;&nbsp;{`direction: PropTypes.string,`}\n                <i>\n                  &nbsp;&nbsp;\n                  {`// orientation of child elements; row|row-reverse|column|column-reverse|initial|inherit`}\n                </i>\n              </code>\n              <br />\n              <code>&nbsp;&nbsp;{`items: PropTypes.array`}</code>\n              <br />\n              <code>\n                &nbsp;&nbsp;{`grow: PropTypes.string`}\n                <i>\n                  &nbsp;&nbsp;\n                  {`// n times grow among the siblings`}\n                </i>\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;{`shrink: PropTypes.string`}\n                <i>\n                  &nbsp;&nbsp;\n                  {`// n times shrink among the siblings`}\n                </i>\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;{`basis: PropTypes.string`}\n                <i>\n                  &nbsp;&nbsp;\n                  {`// sets initial width`}\n                </i>\n              </code>\n              <br />\n              <code>\n                &nbsp;&nbsp;{`order: PropTypes.string`}\n                <i>\n                  &nbsp;&nbsp;\n                  {`// order among siblings`}\n                </i>\n              </code>\n\n              <br />\n              <code>{`};`}</code>\n            </A.CodePanel>\n          </A.Panel> */}\n        </Container>\n    </ThemeContext.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}