{"ast":null,"code":"var _jsxFileName = \"/Users/krystaljoysilvestre/Documents/flexible-grid/src/components/Grid/Container/container.js\";\nimport React, { Component } from 'react';\nimport Cell from '../Cell';\nimport * as C from './style';\n\nclass Container extends Component {\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          children = _this$props.children;\n    return React.createElement(C.Wrapper, {\n      id: id,\n      direction: child.direction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, children && children.map((child, index) => React.createElement(Cell, {\n      key: index,\n      id: child.id,\n      children: child.children,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/krystaljoysilvestre/Documents/flexible-grid/src/components/Grid/Container/container.js"],"names":["React","Component","Cell","C","Container","render","props","id","children","child","direction","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACCC,EADD,eACCA,EADD;AAAA,UACKC,QADL,eACKA,QADL;AAGP,WACE,oBAAC,CAAD,CAAG,OAAH;AAAW,MAAA,EAAE,EAAED,EAAf;AAAmB,MAAA,SAAS,EAAEE,KAAK,CAACC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,IACPA,QAAQ,CAACG,GAAT,CAAa,CAACF,KAAD,EAAQG,KAAR,KACX,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,EAAE,EAAEH,KAAK,CAACF,EAA5B;AAAgC,MAAA,QAAQ,EAAEE,KAAK,CAACD,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF;AAQD;;AAZ+B;;AAelC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Cell from '../Cell';\n\nimport * as C from './style';\n\nclass Container extends Component {\n  render() {\n    const { id, children } = this.props;\n\n    return (\n      <C.Wrapper id={id} direction={child.direction}>\n        {children &&\n          children.map((child, index) => (\n            <Cell key={index} id={child.id} children={child.children} />\n          ))}\n      </C.Wrapper>\n    );\n  }\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}