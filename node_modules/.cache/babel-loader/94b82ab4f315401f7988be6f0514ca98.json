{"ast":null,"code":"import _slicedToArray from \"/Users/krystaljoysilvestre/Documents/tal/flexible-grid/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/krystaljoysilvestre/Documents/tal/flexible-grid/src/App.js\";\nimport React, { useState } from 'react';\nimport { Container, ButtonGroup } from 'reactstrap';\nimport * as gridConfig from './config/grid';\nimport { GridParent, GridChild, Grid } from './components/Grid';\nimport * as A from './style';\n\nfunction App() {\n  const _useState = useState('dark'),\n        _useState2 = _slicedToArray(_useState, 2),\n        themeMode = _useState2[0],\n        selectThemeMode = _useState2[1];\n\n  const ThemeContext = React.createContext(themeMode);\n  return React.createElement(ThemeContext.Provider, {\n    value: themeMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(A.Wrapper, {\n    theme: themeMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(A.Panel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(A.Button, {\n    theme: themeMode,\n    active: themeMode === 'light',\n    onClick: () => selectThemeMode('light'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Light\"), React.createElement(A.Button, {\n    theme: themeMode,\n    active: themeMode === 'dark',\n    onClick: () => selectThemeMode('dark'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Dark\"))), React.createElement(A.Panel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Flexible Grid\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Reusable Component\"), React.createElement(A.Panel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"import \", (GridParent, GridChild, Grid), \" from './components/Grid';\"))), React.createElement(A.ConfigPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(GridParent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(GridChild, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(A.JSONPrettier, {\n    id: \"json-pretty\",\n    data: gridConfig,\n    theme: themeMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(GridChild, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/krystaljoysilvestre/Documents/tal/flexible-grid/src/App.js"],"names":["React","useState","Container","ButtonGroup","gridConfig","GridParent","GridChild","Grid","A","App","themeMode","selectThemeMode","ThemeContext","createContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,YAAvC;AAEA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,QAA4C,mBAA5C;AAEA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACwBR,QAAQ,CAAC,MAAD,CADhC;AAAA;AAAA,QACNS,SADM;AAAA,QACKC,eADL;;AAEb,QAAMC,YAAY,GAAGZ,KAAK,CAACa,aAAN,CAAoBH,SAApB,CAArB;AAEA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD,CAAG,OAAH;AAAW,IAAA,KAAK,EAAEA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD,CAAG,MAAH;AACE,IAAA,KAAK,EAAEA,SADT;AAEE,IAAA,MAAM,EAAEA,SAAS,KAAK,OAFxB;AAGE,IAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,OAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAQE,oBAAC,CAAD,CAAG,MAAH;AACE,IAAA,KAAK,EAAED,SADT;AAEE,IAAA,MAAM,EAAEA,SAAS,KAAK,MAFxB;AAGE,IAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,MAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF,CADF,EAoBE,oBAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAIE,oBAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWN,UAAU,EAAEC,SAAF,EAAaC,IADlC,gCADF,CAJF,CApBF,EA+BE,oBAAC,CAAD,CAAG,WAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD,CAAG,YAAH;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,IAAI,EAAEH,UAFR;AAGE,IAAA,KAAK,EAAEM,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF,CA/BF,CADF,CADF,CADF;AAoDD;;AACD,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Container, ButtonGroup } from 'reactstrap';\n\nimport * as gridConfig from './config/grid';\n\nimport { GridParent, GridChild, Grid } from './components/Grid';\n\nimport * as A from './style';\n\nfunction App() {\n  const [themeMode, selectThemeMode] = useState('dark');\n  const ThemeContext = React.createContext(themeMode);\n\n  return (\n    <ThemeContext.Provider value={themeMode}>\n      <A.Wrapper theme={themeMode}>\n        <Container>\n          <A.Panel>\n            <ButtonGroup>\n              <A.Button\n                theme={themeMode}\n                active={themeMode === 'light'}\n                onClick={() => selectThemeMode('light')}\n              >\n                Light\n              </A.Button>\n              <A.Button\n                theme={themeMode}\n                active={themeMode === 'dark'}\n                onClick={() => selectThemeMode('dark')}\n              >\n                Dark\n              </A.Button>\n            </ButtonGroup>\n          </A.Panel>\n\n          <A.Panel>\n            <h1>Flexible Grid</h1>\n            <h3>Reusable Component</h3>\n\n            <A.Panel>\n              <code>\n                import {(GridParent, GridChild, Grid)} from './components/Grid';\n              </code>\n            </A.Panel>\n          </A.Panel>\n\n          <A.ConfigPanel>\n            <GridParent>\n              <GridChild>\n                <A.JSONPrettier\n                  id=\"json-pretty\"\n                  data={gridConfig}\n                  theme={themeMode}\n                ></A.JSONPrettier>\n              </GridChild>\n              <GridChild>\n                <Grid />\n              </GridChild>\n            </GridParent>\n          </A.ConfigPanel>\n        </Container>\n      </A.Wrapper>\n    </ThemeContext.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}