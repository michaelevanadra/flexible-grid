{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/krystaljoysilvestre/Documents/tal/flexible-grid/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  overflow: scroll;\\n  margin: 0 10px;\\n  border-radius: 5px;\\n  background: \", \";\\n\\n  pre {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 900px;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 15px 0;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background: \", \"\\n  border-color: \", \"\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 100vh;\\n  padding-top: 3%;\\n  background: \", \";\\n  color: \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport * as colors from './constants/colors';\nimport { Button as BSButton } from 'reactstrap';\nimport JSONPretty from 'react-json-pretty';\nexport const Wrapper = styled.div(_templateObject(), props => colors[props.theme].background, props => colors[props.theme].text);\nexport const Button = styled(BSButton)(_templateObject2(), props => {\n  let color;\n\n  if (props.active) {\n    color = \"\".concat(colors[props.theme].primary, \" !important;\");\n  } else {\n    color = \"\".concat(colors[props.theme].secondary, \" !important;\");\n  }\n\n  return color;\n}, props => {\n  let color;\n\n  if (props.active) {\n    color = \"\".concat(colors[props.theme].primary, \" !important;\");\n  } else {\n    color = \"\".concat(colors[props.theme].secondary, \" !important;\");\n  }\n\n  return color;\n});\nexport const Panel = styled.div(_templateObject3());\nexport const ConfigPanel = styled.div(_templateObject4());\nexport const JSONPrettier = styled(JSONPretty)(_templateObject5(), props => colors[props.theme].codeBackground, props => colors[props.theme].codeText);","map":{"version":3,"sources":["/Users/krystaljoysilvestre/Documents/tal/flexible-grid/src/style.js"],"names":["styled","colors","Button","BSButton","JSONPretty","Wrapper","div","props","theme","background","text","color","active","primary","secondary","Panel","ConfigPanel","JSONPrettier","codeBackground","codeText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;AACA,SAASC,MAAM,IAAIC,QAAnB,QAAmC,YAAnC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV,oBAGJC,KAAK,IAAIN,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBC,UAHzB,EAITF,KAAK,IAAIN,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBE,IAJpB,CAAb;AAOP,OAAO,MAAMR,MAAM,GAAGF,MAAM,CAACG,QAAD,CAAT,qBACHI,KAAK,IAAI;AACrB,MAAII,KAAJ;;AAEA,MAAIJ,KAAK,CAACK,MAAV,EAAkB;AAChBD,IAAAA,KAAK,aAAMV,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBK,OAA1B,iBAAL;AACD,GAFD,MAEO;AACLF,IAAAA,KAAK,aAAMV,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBM,SAA1B,iBAAL;AACD;;AACD,SAAOH,KAAP;AACD,CAVgB,EAWDJ,KAAK,IAAI;AACvB,MAAII,KAAJ;;AAEA,MAAIJ,KAAK,CAACK,MAAV,EAAkB;AAChBD,IAAAA,KAAK,aAAMV,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBK,OAA1B,iBAAL;AACD,GAFD,MAEO;AACLF,IAAAA,KAAK,aAAMV,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBM,SAA1B,iBAAL;AACD;;AACD,SAAOH,KAAP;AACD,CApBgB,CAAZ;AAuBP,OAAO,MAAMI,KAAK,GAAGf,MAAM,CAACM,GAAV,oBAAX;AAIP,OAAO,MAAMU,WAAW,GAAGhB,MAAM,CAACM,GAAV,oBAAjB;AAKP,OAAO,MAAMW,YAAY,GAAGjB,MAAM,CAACI,UAAD,CAAT,qBAITG,KAAK,IAAIN,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBU,cAJpB,EAOZX,KAAK,IAAIN,MAAM,CAACM,KAAK,CAACC,KAAP,CAAN,CAAoBW,QAPjB,CAAlB","sourcesContent":["import styled from 'styled-components';\nimport * as colors from './constants/colors';\nimport { Button as BSButton } from 'reactstrap';\nimport JSONPretty from 'react-json-pretty';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  padding-top: 3%;\n  background: ${props => colors[props.theme].background};\n  color: ${props => colors[props.theme].text};\n`;\n\nexport const Button = styled(BSButton)`\n  background: ${props => {\n    let color;\n\n    if (props.active) {\n      color = `${colors[props.theme].primary} !important;`;\n    } else {\n      color = `${colors[props.theme].secondary} !important;`;\n    }\n    return color;\n  }}\n  border-color: ${props => {\n    let color;\n\n    if (props.active) {\n      color = `${colors[props.theme].primary} !important;`;\n    } else {\n      color = `${colors[props.theme].secondary} !important;`;\n    }\n    return color;\n  }}\n`;\n\nexport const Panel = styled.div`\n  margin: 15px 0;\n`;\n\nexport const ConfigPanel = styled.div`\n  height: 900px;\n  overflow: hidden;\n`;\n\nexport const JSONPrettier = styled(JSONPretty)`\n  overflow: scroll;\n  margin: 0 10px;\n  border-radius: 5px;\n  background: ${props => colors[props.theme].codeBackground};\n\n  pre {\n    color: ${props => colors[props.theme].codeText};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}